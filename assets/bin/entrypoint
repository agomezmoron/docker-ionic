#!/bin/bash

#=====================
# Functions for the VNC utility
#=====================

function run_xvfb() {
  killall Xvfb && pgrep Xvfb || Xvfb $DISPLAY -screen 0 $X11_RESOLUTION &> /dev/null &
}
function run_x11vnc() {
  killall x11vnc && pgrep x11vnc || x11vnc -display $DISPLAY -shared -xkb -skip_lockkeys -forever -noxdamage -passwd $VNC_PASSWD &> /dev/null &
}

#=====================
# Environment variables
#=====================

SAM_DIR="/src"
NPM_FILE=package.json
BOWER_FILE=bower.json

#=====================
# Store the IP to specify to ionic command to avoid user interaction
#=====================

if [[ $(ifconfig eth | grep 'inet addr:' -m 1 | cut -d: -f2 | awk '{ print $1}') == "" ]]; then
    IP=$(ifconfig wlan | grep 'inet addr:' -m 1 | cut -d: -f2 | awk '{ print $1}')
else
    IP=$(ifconfig eth | grep 'inet addr:' -m 1 | cut -d: -f2 | awk '{ print $1}')
fi

#=====================
# Default ionic command
#=====================

if [ -z "$LAUNCH_COMMAND" ]; then
    LAUNCH_COMMAND="ionic emulate -c"
fi

#=====================
# Default android emulator device
#=====================

if [ -z "$DEVICE" ]; then
    DEVICE="Nexus S"
fi

#=====================
# Default CPU for emulator
#=====================

if [ -z "$ABI" ]; then
    ABI="default/x86_64"
fi

#=====================
# Update Android SDK if user chose it
#=====================

if [ "$UPDATE_SDK" == "y" ]; then
  echo 'y' | android update sdk --no-ui
fi

#=====================
# Start VNC
#=====================

run_xvfb &> /dev/null
run_x11vnc &> /dev/null

echo && echo && echo && echo "::::::::::::::::::::::::::::::::"
echo "SELECTED IP: "$IP
echo "::::::::::::::::::::::::::::::::" && echo && echo
sleep 10

#=====================
# Create the emulator
#=====================

echo && echo "CREATING EMULATOR..."

android -s create avd --name Default --target android-$ANDROID_SDK_VERSION --abi $ABI -s 480x800 --force -d "$DEVICE" &> /dev/null

echo && echo "DONE" && echo && echo

#=====================
# Start Ionic command
#=====================

echo && echo && echo "POPULATING PROJECT WITH DEPENDENCIES AND LAUNCHING..." && sleep 2
echo && echo

cd $SAM_DIR

npm rebuild node-sass

if [ "$UPDATE_PLUGINS" == "y" ]; then

    # Checking if there is a npm file
    if [ -f "$NPM_FILE" ]
      then
      npm install
      npm update
    fi

    # Checking if there is a bower file
    if [ -f "$BOWER_FILE" ]
      then
      bower install --allow-root
      bower update --allow-root
    fi
    
fi
gulp profile --development

if [ "$UPDATE_PLATFORM" == "y" ]; then

    ionic platform remove android >/dev/null
    ionic platform add android

fi

/bin/bash --login -c "$LAUNCH_COMMAND" --address $IP
exit