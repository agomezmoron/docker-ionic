#!/bin/bash
set -x

#=====================
# Functions for the VNC utility
#=====================

function run_xvfb() {
        pgrep Xvfb || Xvfb $DISPLAY -screen 0 $X11_RESOLUTION &> /dev/null &
}
function run_x11vnc() {
  pgrep x11vnc || x11vnc -display $DISPLAY -shared -xkb -skip_lockkeys -forever -noxdamage -passwd $VNC_PASSWD &> /dev/null &
}

#=====================
# Environment variables
#=====================

SAM_DIR="/src"
NPM_FILE=package.json
BOWER_FILE=bower.json

if [ -z "$LAUNCH_COMMAND" ]; then
    LAUNCH_COMMAND="ionic emulate -c"
fi

if [ -z "$DEVICE" ]; then
    DEVICE="Nexus S"
fi

if [ -z "$ABI" ]; then
    ABI="default/x86_64"
fi 

#=====================
# Start VNC
#=====================

run_xvfb
run_x11vnc

#=====================
# Update Android SDK if user chose it
#=====================

if [ "$UPDATE" == "y" ]; then
  echo 'y' | android update sdk --no-ui
fi

#=====================
# Create/start the emulator
#=====================

android -s create avd --name Default --target android-$ANDROID_SDK_VERSION --abi $ABI -s 480x800 --force -d "$DEVICE"

#=====================
# Start Appium command
#=====================

cd $SAM_DIR

npm rebuild node-sass

# Checking if there is a npm file
if [ -f "$NPM_FILE" ]
  then
  npm install
  npm update
fi

# Checking if there is a bower file
if [ -f "$BOWER_FILE" ]
  then
  bower install --allow-root
  bower update --allow-root
fi

gulp profile --development

ionic platform remove android >/dev/null
ionic platform add android

cordova telemetry on
gulp remove-zips
/bin/bash --login -c "$LAUNCH_COMMAND"